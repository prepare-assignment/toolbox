name: Release Toolbox to PyPi

on:
  push:
    branches:
      - 'releases/**'
    tags:
      - 'v*'

jobs:
  release:
    strategy:
        matrix:
          python-version: ["3.8"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-venv.outputs.cache-hit != 'true'
        run: poetry install
      - name: Build
        run: poetry build
      - name: Publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish